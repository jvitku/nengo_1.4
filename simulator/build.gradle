// @author Jaroslav Vitku [vitkujar@fel.cvut.cz]

version    = '0.0.10-SNAPSHOT'
group      = 'ctu.nengoros'

////////////////
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'application'
mainClassName       = 'ctu.nengorosHeadless.simulator.test.QLambdaTest'
////////////////

// Gradle uses different default folders for source files => remap them
sourceSets {
    test {
        java {
	        srcDir 'src/java/test'
			// this ensures that all nengo tests will be ommited:
			// but the eclipse pluin will have problem with this
            //srcDir 'src/java/test/ctu'
        }
        resources {
            srcDir 'src/resources'
        }
    }
    main {
        java {
            srcDir 'src/java/main'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

dependencies {
    //compile project(':testnodes')
    compile 'ros.rosjava_core:rosjava:0.0.0-SNAPSHOT'
    compile fileTree(dir: 'lib', include: '**/*.jar')

    testCompile 'ros.rosjava_core:rosjava:0.0.0-SNAPSHOT'
    testCompile fileTree(dir: 'lib', include: '**/*.jar')
    // newer junit than is in the lib directory
    compile 'junit:junit:4.10'
    testCompile 'junit:junit:4.10'

    compile 'ctu.nengoros:jroscore:0.0.12-SNAPSHOT'
    testCompile 'ctu.nengoros:jroscore:0.0.12-SNAPSHOT'
    runtime 'ctu.nengoros:jroscore:0.0.12-SNAPSHOT'

	// these are used by the corresponding jython scripts which use rl or physiology
	compile 'ctu.hanns.physiology:statespace:0.0.2-SNAPSHOT'
	runtime 'ctu.hanns.physiology:statespace:0.0.2-SNAPSHOT'
	//runtime 'ctu.hanns.rl:sarsa:0.0.5-SNAPSHOT'
	compile 'ctu.hanns.rl:smdp:0.0.5-SNAPSHOT'
	testCompile 'ctu.hanns.rl:smdp:0.0.5-SNAPSHOT'
	runtime 'ctu.hanns.rl:smdp:0.0.5-SNAPSHOT'

	runtime 'ctu.hanns.environments:gridworld:0.0.5-SNAPSHOT'
	compile 'ctu.hanns.environments:gridworld:0.0.5-SNAPSHOT'
	testCompile 'ctu.hanns.environments:gridworld:0.0.5-SNAPSHOT'

    compile 'ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT'
	runtime 'ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT'
    testCompile 'ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT'


	//compile project('ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT')
	//runtime project('ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT')
    //testCompile project('ctu.hanns.environments:statesactions:0.0.5-SNAPSHOT')	

    //compile 'ctu.nengoros.simulators:vivae:0.0.0-SNAPSHOT' 
    //testCompile 'ctu.nengoros.simulators:vivae:0.0.0-SNAPSHOT' 
    //runtime 'ctu.nengoros.simulators:vivae:0.0.0-SNAPSHOT'

	// Note: this could be the circular dependency (TODO solve this somehow globally)
	// compile 'ctu.nengoros.simulators:pluginvivae:0.0.0-SNAPSHOT'
	// runtime 'ctu.nengoros.simulators:pluginvivae:0.0.0-SNAPSHOT'

}

// prints out dependencies... 
task list(dependsOn: configurations.compile) << {
    println "classpath = ${configurations.compile.collect {File file -> file.name}}"
}

defaultTasks 'install', 'eclipse'
