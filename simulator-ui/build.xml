// @author Jaroslav Vitku [vitkujar@fel.cvut.cz]
// 
//
// Version of build configuration which depends on locally stored rosjava libraries under: nengo/lib-rosjava
//

// Gradle uses different default folders for source files => remap them
sourceSets {
    test {
        java {
            srcDir 'src/java/test'
        }
        resources {
            srcDir 'src/resources'
        }
    }
    main {
        java {
            srcDir 'src/java/main'
            // add this directory to installApp?
            //runtimeClasspath = fileTree(dir: '../dist-files', include: '**/*')
        }
        resources {
            // this adds resources into build/resources if found something in the folder
            srcDir 'src/resources'
        }
    }
}

// Create the runnable application from this project into build/lib/bin.. ? [./gradlew installApp]
apply plugin: 'application'
mainClassName = 'ca.nengo.ui.NengoLauncher'

// this ensures that there is also made a complete application under simulator-ui/build/install/simulator-ui/bin
install.dependsOn installApp

dependencies {

    compile project(':simulator')
    compile fileTree(dir: 'lib', include: '**/*.jar')
    compile fileTree(dir: '../lib-rosjava', include: '**/*.jar')
    //compile 'ros.rosjava_core:rosjava:0.0.0-SNAPSHOT'
    //compile 'simulators:vivae:0.0.0-SNAPSHOT'
}

// prints out dependencies... 
task list(dependsOn: configurations.compile) << {
    println "classpath = ${configurations.compile.collect {File file -> file.name}}"
}


// after installingApp (everything into simulator-ui/build/install/simulator-ui/) copy all dist-files there
installApp.doLast {
    // see: http://www.gradle.org/docs/current/javadoc/org/gradle/api/tasks/Copy.html
    println 'Copying dist-files (and others) into build/install/simulator-ui/bin/'
    copy {
        from 'dist-files'
        into "$buildDir/install/"+project.name+'/bin/'
        include('**/*') 
        exclude('nengo','nengo-cl','nengo.bat','nengo-cl.bat')
    }
    copy {
        from 'python'
        into "$buildDir/install/"+project.name+'/bin/python'
    }
    // OK, overwrite files from dist-files with these, potentially newer
    copy {
        from 'images'
        into "$buildDir/install/"+project.name+'/bin/images'
    }
    // pseudo-inverse
    copy {
        from 'external'
        into "$buildDir/install/"+project.name+'/bin/external'
    }
    // nengoros demo files
    copy {
        from 'nr-demo'
        into "$buildDir/install/"+project.name+'/bin/nr-demo'
    }
    // original demo files
    copy {
        from 'demo'
        into "$buildDir/install/"+project.name+'/bin/demo'
    }
    // layout files
    copy {
        from 'layouts'
        into "$buildDir/install/"+project.name+'/bin/layouts'
    }
    // GUI files
    copy {
        from 'UIFiles'
        into "$buildDir/install/"+project.name+'/bin/UIFiles'
    }
    copy {
        from 'commandhistory.dat'
        into "$buildDir/install/"+project.name+'/bin/'
    }
    copy {
        from 'lib/Lib'
        into "$buildDir/install/"+project.name+'/lib/Lib'
        include('**/*')
    }
}
